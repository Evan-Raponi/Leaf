
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;

import io.netty.util.internal.ThreadLocalRandom;

public class Main extends JavaPlugin implements Listener {
	
	public void onEnable() {
		Bukkit.getServer().getPluginManager().registerEvents(this, this);
		Config();
	}
	
	public void Config() {
		getConfig().options().copyDefaults(true);
		saveConfig();
	}
	
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onBreak(BlockBreakEvent e) {
		
		Player p = e.getPlayer();
		ItemStack axe = new ItemStack(Material.FEATHER);
		ItemStack pickaxe = new ItemStack(Material.BLAZE_ROD);
	
		
		if(e.getBlock().getType() == Material.LEAVES) {
			
			//HERE IS ISSUE
			
			e.setCancelled(true);
			int i = ThreadLocalRandom.current().nextInt(100) + 1;
			
			double Chance = getConfig().getInt("AppleDropChance")/100;
			
			if(i > 0 && i <= Chance) {
				
			p.getInventory().addItem(new ItemStack(Material.APPLE));
			return;
		}
		
		if(getConfig().getIntegerList("Axe").contains(e.getBlock().getTypeId()) && p.getInventory().getItemInHand().equals(axe)){
			
			int x = e.getBlock().getTypeId();
		
			    e.setCancelled(true); 
				p.getInventory().addItem(new ItemStack(x));
				
		return; 
		
		}
		
		if(getConfig().getIntegerList("Pickaxe").contains(e.getBlock().getTypeId()) && p.getInventory().getItemInHand().equals(pickaxe)) {
			
		e.setCancelled(true);
		p.getInventory().addItem(new ItemStack(Material.COBBLESTONE));
			
			return;
			
		}
		
		
		}
		}
}



